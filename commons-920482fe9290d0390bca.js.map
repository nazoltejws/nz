{"version":3,"file":"commons-920482fe9290d0390bca.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/scrollUpIcon.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/messenger.js","webpack://gatsby-starter-default/./src/components/layout.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Header = () => {\n    const [showMenu, setMenu] = useState(false);\n    const HandleMenu = () => {\n        setMenu(!showMenu);\n    };\n\n    const [navbar, setNavbar] = useState(false);\n\n    const changeBackground = () => {\n        if (window.scrollY >= 10) {\n            setNavbar(true);\n        } else {\n            setNavbar(false);\n        }\n    };\n\n    useEffect(() => {\n        changeBackground();\n        window.addEventListener(\"scroll\", changeBackground);\n    });\n\n    return (\n        <header\n            className=\"\n                    z-50 mx-auto sticky top-0 text-center\n            \"\n        >\n            <div\n                className={\n                    \"realtive bg-transparent transition-colors duration-200 w-full\"\n                }\n            >\n                <div className={\"absolute bg-black/40 h-full w-full\"} />\n                <div\n                    className={\n                        !navbar\n                            ? \"h-full w-full py-1 absolute top-0 -z-10 transition-colors duration-300\"\n                            : \"h-full w-full py-1 bg-black/20 absolute top-0 -z-10 backdrop-blur-md transition-colors duration-500\"\n                    }\n                ></div>\n                <nav\n                    className={\n                        showMenu\n                            ? \"max-w-screen-2xl mx-auto px-4 py-2 md:py-4 flex items-center justify-between w-full navTextColor bg-black/90 transition-colors duration-200\"\n                            : \"max-w-screen-2xl mx-auto px-4 py-2 md:py-2 flex items-center justify-between lg:px-[15%] w-full navTextColor transition-colors duration-200\"\n                    }\n                >\n                    <Link\n                        to=\"/\"\n                        className=\"flex lg:static items-center justify-center\"\n                        aria-label=\"logo\"\n                    >\n                        <StaticImage\n                            loading=\"eager\"\n                            className=\"h-auto w-44\"\n                            alt=\"logo\"\n                            src=\"../assets/logo.png\"\n                        />\n                    </Link>\n                    <button\n                        aria-label=\"Menu\"\n                        onClick={HandleMenu}\n                        className=\"bg-slate-200/80 group hover:bg-slate-100/90 lg:hidden p-2.5 transition-colors duration-200 z-50 rounded-lg\"\n                    >\n                        <div\n                            className={\n                                !showMenu\n                                    ? \"w-5 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 rounded-lg\"\n                                    : \"w-5 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 translate-y-2 rotate-45 rounded-lg\"\n                            }\n                        />\n                        <div\n                            className={\n                                !showMenu\n                                    ? \"w-3 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 rounded-lg\"\n                                    : \"w-3 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 opacity-0\"\n                            }\n                        />\n                        <div\n                            className={\n                                !showMenu\n                                    ? \"w-5 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 rounded-lg\"\n                                    : \"w-5 h-1 group-hover:bg-gray-700 transition-all duration-200 bg-gray-600 m-1 -translate-y-2 -rotate-45 rounded-lg\"\n                            }\n                        />\n                    </button>\n                    <ul\n                        className={\n                            showMenu\n                                ? \"absolute text-lg top-full left-0 pb-4 flex flex-col lg:static text-main text-center w-full bg-black/90 opacity-100 transition duration-200 -translate-x-0 -z-10\"\n                                : \"absolute top-full left-0 py-2 flex flex-col lg:opacity-100 lg:static lg:flex lg:flex-row lg:items-center lg:justify-end lg:top-0 lg:translate-x-0 lg:py-0 text-main text-center w-full opacity-0 -translate-x-full transition duration-100 -z-10 lg:z-10 lg:ml-8\"\n                        }\n                    >\n                        <li className=\"mx-2 my-2 px-2 py-3\" >\n                            <Link\n                                aria-label=\"Strona Główna\"\n                                className=\"hover:text-orange-400 transition-colors duration-200\"\n                                to=\"/\"\n                            >\n                                Home\n                            </Link>\n                        </li>\n\n                        <li className=\"mx-2 my-2 px-2 py-3\" >\n                            <Link\n                                aria-label=\"O Nas\"\n                                className=\"hover:text-orange-400 transition-colors duration-200\"\n                                to=\"/oNas\"\n                            >\n                                O Nas\n                            </Link>\n                        </li>\n                        <li className=\"mx-2 my-2 px-2 py-3\" >\n                            <Link\n                                aria-label=\"Oferta\"\n                                className=\"hover:text-orange-400 transition-colors duration-200\"\n                                to=\"/oferta\"\n                            >\n                                Oferta\n                            </Link>\n                        </li>\n                        <li className=\"mx-2 my-2 px-2 py-3\" >\n                            <Link\n                                aria-label=\"Fakty i Mity\"\n                                className=\"hover:text-orange-400 transition-colors duration-200\"\n                                to=\"/faktyMity\"\n                            >\n                                Fakty & Mity\n                            </Link>\n                        </li>\n                        <li className=\"mx-2 my-2 px-2 py-3\" >\n                            <Link\n                                aria-label=\"Kontakt\"\n                                className=\"hover:text-orange-400 transition-colors duration-200\"\n                                to=\"/kontakt\"\n                            >\n                                Kontakt\n                            </Link>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useState, useEffect } from \"react\";\n\nconst ScrollUpIcon = () => {\n    const [ScrollUpIcon, setScrollUp] = useState(false);\n\n    const scrollUp = () => {\n        if (window.scrollY >= 1200) {\n            setScrollUp(true);\n        } else {\n            setScrollUp(false);\n        }\n    };\n\n    useEffect(() => {\n        scrollUp();\n        window.addEventListener(\"scroll\", scrollUp);\n    });\n\n    return (\n        <Link\n            aria-label=\"Przewiń do góry\"\n            className={\n                !ScrollUpIcon\n                    ? \"fixed right-6 bottom-24 transition-transform duration-1000 z-50 translate-x-[200%]\"\n                    : \"fixed right-6 hover:scale-110 bottom-24 translate-x-0 transition-transform duration-500 z-50 \"\n            }\n            to=\"#\"\n        >\n            <svg\n                className=\"h-11 w-11 md:h-12 md:w-12\"\n                width=\"571\"\n                height=\"571\"\n                viewBox=\"0 0 571 571\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <rect x=\"121\" y=\"147\" width=\"337\" height=\"256\" fill=\"black\" />\n                <path\n                    d=\"M264.31 0.658076C202.976 5.72474 147.643 28.3914 100.843 67.5914C52.7097 107.725 18.3097 165.858 5.64301 228.125C-15.0237 329.858 22.043 436.525 100.976 502.658C208.31 592.525 361.643 592.525 468.976 502.658C517.11 462.391 551.643 404.258 564.31 341.991C581.643 256.658 559.11 168.525 502.443 100.925C455.243 44.3914 384.976 7.99141 310.31 1.19141C295.91 -0.141924 276.576 -0.408591 264.31 0.658076ZM296.176 203.058C298.443 204.125 321.776 226.525 347.91 252.791C396.843 301.725 398.31 303.591 398.31 313.591C398.31 327.458 384.71 340.925 370.576 341.058C359.91 341.058 356.576 338.525 319.91 301.991L284.976 267.058L249.91 301.991C213.376 338.525 210.043 341.058 199.376 341.058C185.243 340.925 171.643 327.458 171.643 313.591C171.643 303.591 173.11 301.725 222.043 252.791C248.176 226.525 271.376 204.258 273.643 203.058C278.843 200.525 290.71 200.525 296.176 203.058Z\"\n                    fill=\"yellow\"\n                />\n                <defs>\n                    <linearGradient\n                        id=\"paint0_linear_1033_163\"\n                        x1=\"78.0807\"\n                        y1=\"465.591\"\n                        x2=\"607.558\"\n                        y2=\"-42.9764\"\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop offset=\"0.0416667\" stop-color=\"#FF8A00\" />\n                        <stop offset=\"1\" stop-color=\"#5CFF58\" />\n                    </linearGradient>\n                </defs>\n            </svg>\n        </Link>\n    );\n};\n\nexport default ScrollUpIcon;\n","import * as React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\n\nconst Footer = () => (\n    <footer class=\"text-gray-300 body-font bg-black/70 relative bottom-0 w-full px-6\">\n        <div class=\"container px-5 py-12 mx-auto flex items-center sm:flex-row flex-col\">\n            <Link\n                aria-label=\"Nażółtej.pl\"\n                to=\"/\"\n                class=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\"\n            >\n                <StaticImage\n                    className=\"h-auto w-32\"\n                    alt=\"logo\"\n                    src=\"../assets/logo.png\"\n                />\n            </Link>\n            <p class=\"text-sm text-gray-400 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-500 sm:py-2 sm:mt-0 mt-4\">\n                © 2023 Nażółtej.pl —\n                <Link\n                    aria-label=\"seovileo.pl\"\n                    href=\"https://seovileo.pl/\"\n                    class=\"text-gray-300 ml-1\"\n                    target=\"_blank\"\n                >\n                    @seovileo.pl\n                </Link>\n            </p>\n            <span class=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\n                <Link\n                    aria-label=\"facebook\"\n                    to=\"https://www.facebook.com/rejestracjanazolte\"\n                    class=\"text-gray-400\"\n                >\n                    <svg\n                        fill=\"currentColor\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        class=\"w-5 h-5\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\"></path>\n                    </svg>\n                </Link>\n                <Link\n                    aria-label=\"instagram\"\n                    to=\"https://www.instagram.com/nazoltej.pl/\"\n                    class=\"ml-3 text-gray-400\"\n                >\n                    <svg\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        class=\"w-5 h-5\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <rect\n                            width=\"20\"\n                            height=\"20\"\n                            x=\"2\"\n                            y=\"2\"\n                            rx=\"5\"\n                            ry=\"5\"\n                        ></rect>\n                        <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\"></path>\n                    </svg>\n                </Link>\n            </span>\n        </div>\n    </footer>\n);\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useState, useEffect } from \"react\";\n\nconst Messenger = () => {\n    const [msg, setMsg] = useState(false);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setMsg(true);\n        }, 3000);\n        return () => timer;\n    });\n\n    return (\n        <Link\n            aria-label=\"Messenger\"\n            className={\n                !msg\n                    ? \"fixed right-6 bottom-8 transition-transform duration-1000 z-50 translate-x-[200%]\"\n                    : \"fixed right-6 hover:scale-110 bottom-8 translate-x-0 transition-transform duration-500 z-50\"\n            }\n            to=\"http://m.me/106209071457987\"\n        >\n            <svg\n                className=\"h-11 w-11 md:h-12 md:w-12 msg-rotate \"\n                viewBox=\"0 0 100 100\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <rect x=\"14\" y=\"23\" width=\"72\" height=\"52\" fill=\"white\" />\n                <path\n                    d=\"M0 48.5C0 20.6312 21.8312 0 50 0C78.1688 0 100 20.6312 100 48.5C100 76.3688 78.1688 97 50 97C44.9375 97 40.0875 96.3313 35.525 95.0813C34.6403 94.8351 33.6978 94.9013 32.8563 95.2688L22.9312 99.6562C22.3318 99.9207 21.6766 100.034 21.0232 99.9857C20.3698 99.9376 19.7383 99.7298 19.184 99.3804C18.6298 99.0311 18.1698 98.551 17.8446 97.9822C17.5193 97.4135 17.3388 96.7736 17.3187 96.1188L17.0438 87.225C17.0248 86.6837 16.8958 86.1518 16.6648 85.6619C16.4338 85.1719 16.1056 84.7341 15.7 84.375C5.975 75.675 0 63.075 0 48.5ZM34.6625 39.3813L19.975 62.6813C18.5688 64.9188 21.3125 67.4375 23.4188 65.8438L39.2 53.8688C39.719 53.4745 40.3524 53.26 41.0042 53.2578C41.6559 53.2555 42.2907 53.4656 42.8125 53.8562L54.4937 62.6188C55.3226 63.2403 56.2711 63.6834 57.2797 63.9201C58.2883 64.1568 59.3349 64.182 60.3537 63.9941C61.3725 63.8062 62.3413 63.4092 63.1991 62.8283C64.0568 62.2474 64.7849 61.4951 65.3375 60.6188L80.025 37.3188C81.4375 35.0813 78.6875 32.5625 76.5813 34.1562L60.8 46.1312C60.281 46.5255 59.6476 46.7399 58.9958 46.7422C58.3441 46.7445 57.7093 46.5344 57.1875 46.1437L45.5063 37.375C44.6774 36.7535 43.7289 36.3104 42.7203 36.0737C41.7117 35.837 40.6651 35.8118 39.6463 35.9997C38.6275 36.1876 37.6587 36.5845 36.8009 37.1654C35.9432 37.7464 35.2151 38.5049 34.6625 39.3813Z\"\n                    fill=\"url(#paint0_linear_862_91)\"\n                />\n                <defs>\n                    <linearGradient\n                        id=\"paint0_linear_862_91\"\n                        x1=\"87.5\"\n                        y1=\"-1.63772e-07\"\n                        x2=\"10.5\"\n                        y2=\"93.5\"\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop stop-color=\"#FF8A00\" />\n                        <stop offset=\"0.270833\" stop-color=\"#DB00FF\" />\n                        <stop offset=\"0.807292\" stop-color=\"#5263FF\" />\n                    </linearGradient>\n                </defs>\n            </svg>\n            <div className=\"w-5/6 md:w-3/4 md:left-6 flex items-center justify-around h-4 rounded-md left-5 bg-white absolute bottom-9 md:bottom-[2.2rem] px-[.15rem] border\">\n                <div className=\"h-2 w-2 rounded-full bg-gray-600 shadow-lg slide-top\"></div>\n                <div className=\"h-2 w-2 rounded-full bg-gray-600 shadow-lg slide-top1\"></div>\n                <div className=\"h-2 w-2 rounded-full bg-gray-600 shadow-lg slide-top2\"></div>\n            </div>\n        </Link>\n    );\n};\n\nexport default Messenger;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport ScrollUpIcon from \"./scrollUpIcon\";\nimport Footer from \"./footer\";\nimport Messenger from \"./messenger\";\n\nconst Layout = ({ children }) => {\n    const data = useStaticQuery(graphql`\n        query SiteTitleQuery {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n\n    return (\n        <div className=\"text-base text-black max-w-[2000px] mx-auto\">\n            <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n            <div>\n                <main className=\"w-full overflow-hidden\">{children}</main>\n                <ScrollUpIcon />\n                <Messenger />\n\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","j","hasNativeLazyLoadSupport","HTMLImageElement","prototype","T","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","s","width","height","className","style","O","h","loading","shouldLoad","opacity","z","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","P","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","q","children","u","H","F","G","srcSet","decoding","V","sources","sizes","_ref6","media","type","key","B","propTypes","displayName","U","Y","Error","X","J","Z","K","Q","_len","arguments","_key","c","concat","ee","image","te","ae","ie","Set","se","re","ne","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","oe","le","de","__imageData","__error","console","warn","ce","imgClassName","imgStyle","placeholder","he","_len2","_key2","ue","ge","pe","Header","showMenu","setMenu","useState","navbar","setNavbar","changeBackground","window","scrollY","useEffect","React","Link","to","StaticImage","require","onClick","HandleMenu","ScrollUpIcon","setScrollUp","scrollUp","viewBox","xmlns","fill","id","x1","y1","x2","y2","gradientUnits","offset","Footer","href","target","stroke","rx","ry","Messenger","msg","setMsg","timer","_ref","_data$site$siteMetada","data","useStaticQuery","siteTitle","site","siteMetadata","title"],"sourceRoot":""}